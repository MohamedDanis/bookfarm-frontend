/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/CLo9vyjSuCC
 */
"use client"
import { AccordionTrigger, AccordionContent, AccordionItem, Accordion } from "@/components/ui/accordion"
import { Checkbox } from "@/components/ui/checkbox"
import { Label } from "@/components/ui/label"
import { Button } from "@/components/ui/button"
import { CardContent, Card } from "@/components/ui/card"
import useSWR from "swr"
import { showCategories } from "@/api/admin/BookRequests"
import { useState } from "react"
import { userApi } from "@/utils/ApiCalls"



export function FilterComp({ onChange }: any) {
  const { data, error } = useSWR('api/categories', showCategories);
  const [showAllItems, setShowAllItems] = useState(false);
  const [filters, setFilters] = useState<{
    category: any[];
    minPrice: string;
    maxPrice: string;
  }>({
    category: [],
    minPrice: '',
    maxPrice: '',
  });
  const [category, setCategory] = useState<any>();
  console.log(filters);
  async function getData() {
    if (filters.category.length > 0) {
      onChange(filters);
      const res = await userApi.get('/books', { params: filters });
      return res;
    }
  }

  getData().then((res) => {
    console.log(res?.data);
  });
 
  const maxItemsToShow = 5;
  async function updateCategoryFilter() {
    console.log(category);
    
    setFilters((f) => ({ ...f, category: [...f.category, category] }));
    console.log(filters);
    
    const res = await userApi.get('/books',{params:filters})
    console.log(res);
  }

  const handleGenre = (e: any) => {
    console.log(e);
    setCategory(e);
    setFilters((f) => ({ ...f, category: [...f.category, e] }));
    onChange(filters);
    
  }
  console.log(filters);
  
  return (
    <div className="grid gap-6 md:gap-8 p-4 w-1/4 ">
      <div className="grid md:grid-cols-[240px_1fr] gap-10">
        <div className="space-y-4">
          <h2 className="text-lg font-semibold">Filters</h2>
          <Accordion className="w-full" collapsible type="single">
            <AccordionItem value="price">
              <AccordionTrigger className="text-base">Price</AccordionTrigger>
              <AccordionContent>
                <div className="grid gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox id="price-low" />
                    Under $500{"\n                              "}
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox id="price-medium" />
                    $500 - $1000{"\n                              "}
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox id="price-high" />
                    Over $1000{"\n                              "}
                  </Label>
                </div>
              </AccordionContent>
            </AccordionItem>
            <AccordionItem value="category">
              <AccordionTrigger className="text-base">Categories</AccordionTrigger>
              <AccordionContent>
                <div className="grid gap-2">
                  {
                    data?.slice(0, showAllItems ? data.length : maxItemsToShow).map((genre:any,index:any)=>(
                      <Label className="flex items-center gap-2 font-normal">
                    <Checkbox id="category-electronics" onCheckedChange={()=>handleGenre(genre?.name) } />
                    {genre?.name}{"\n                              "}
                  </Label>
                    ))
                  }
                  {data?.length > maxItemsToShow && (
                    <div className="flex justify-center">
                      <Button variant='ghost' onClick={() => setShowAllItems(!showAllItems)}>
                        {showAllItems ? "Show Less" : "Show More"}
                      </Button>
                    </div>
                  )}
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
        </div>
      </div>
    </div>
  )
}
